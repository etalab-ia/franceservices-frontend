name: Build and deploy

on:
  push:
    branches:
      - main
      - staging
      - dev

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}/frontend
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    if: contains(fromJson('["main", "staging", "dev"]'), github.ref_name)
    name: Build and push from ${{ github.ref_name }}/${{ github.sha }}
    environment: ${{ (github.ref == 'refs/heads/main' && 'production') || (github.ref == 'refs/heads/staging' && 'staging') || 'dev' }}
    outputs:
      commit_title: ${{ steps.get_head_commit_title.outputs.title }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get last commit title
        id: get_head_commit_title
        run: echo "title=$(git log --format=%B -n 1 HEAD | head -n 1)" >> $GITHUB_OUTPUT

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }},${{ env.IMAGE_NAME }}:${{github.ref_name}}-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VITE_API_URL=${{ vars.VITE_API_URL }}
            VITE_ENVIRONMENT_NAME=${{ vars.VITE_ENVIRONMENT_NAME }}
            VITE_MODEL_NAME=${{ vars.VITE_MODEL_NAME }}
            VITE_MODEL_MODE=${{ vars.VITE_MODEL_MODE }}
            VITE_MODEL_TEMPERATURE=${{ vars.VITE_MODEL_TEMPERATURE }}
            VITE_MATOMO_URL=${{ vars.VITE_MATOMO_URL }}
            VITE_KEYCLOAK_AUTHORITY=${{ vars.VITE_KEYCLOAK_AUTHORITY }}
            VITE_KEYCLOAK_CLIENT_ID=${{ vars.VITE_KEYCLOAK_CLIENT_ID }}
            VITE_KEYCLOAK_REDIRECT_URL=${{ vars.VITE_KEYCLOAK_REDIRECT_URL }}

  deploy-dev:
    name: Deploy from ${{ github.ref_name }}/${{ github.sha }}
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref_name == 'dev'
    steps:
      - name: Trigger dev deployment
        run: |
          RESPONSE="$(curl --request POST \
            --form token=${{ secrets.GITLAB_CI_TOKEN }} \
            --form ref=main \
            --form 'variables[pipeline_name]=${{ github.event.repository.name }} - ${{ needs.build-and-push.outputs.commit_title }}' \
            --form 'variables[docker_image_tag]=${{ env.IMAGE_TAG }}' \
            --form 'variables[application_to_deploy]=albert-france-services-frontend' \
            --form 'variables[deployment_environment]=dev' \
            'https://gitlab.com/api/v4/projects/58117805/trigger/pipeline')"

          if echo "$RESPONSE" | grep -q '"status":"created"'; then
            echo $RESPONSE
          else
            echo $RESPONSE
            exit 1
          fi

